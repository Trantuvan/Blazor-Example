@page "/myorders"
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<div class="top-bar">
    <NavLink class="logo" href="">
        <img src="img/logo.svg" />
    </NavLink>

    <NavLink href="" class="nav-tab" Match="NavLinkMatch.All">
        <img src="img/pizza-slice.svg" />
        <div>Get Pizza</div>
    </NavLink>

    <NavLink href="myorders" class="nav-tab">
        <img src="img/bike.svg" />
        <div>My Orders</div>
    </NavLink>
</div>

<div class="main">
    @if (orderWithStatuses is null)
    {
        <text>Loading...</text>
    }
    else if (orderWithStatuses.Any() == false)
    {
        <h2>No orders placed</h2>
        <a class="btn btn-success" href="">Order some pizza</a>
    }
    else
    {
        <div class="list-group orders-list">
            @foreach (var item in orderWithStatuses)
            {
                <div class="list-group-item">
                    <div class="col">
                        <h5>@item.Order.CreatedTime.ToLongDateString()</h5>
                        Items:
                        <strong>@item.Order.Pizzas.Count()</strong>;
                        Total price:
                        <strong>£@item.Order.GetFormattedTotalPrice()</strong>
                    </div>
                    <div class="col">
                        Status: <strong>@item.StatusText</strong>
                    </div>
                    @if (!@item.StatusText.Equals("Delivered"))
                    {
                        <div class="col flex-grow-0">
                            <a href="myorders/" class="btn btn-success">Track &gt;</a>
                        </div>
                    }
                </div>
            }
        </div>
    }
</div>

@code {
    private List<OrderWithStatus> orderWithStatuses = new();

    protected override async Task OnParametersSetAsync()
    {
        orderWithStatuses = await HttpClient.GetFromJsonAsync<List<OrderWithStatus>>(NavigationManager.BaseUri + "orders");
    }
}
